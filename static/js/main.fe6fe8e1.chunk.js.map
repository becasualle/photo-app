{"version":3,"sources":["reducer.js","constants.js","context.js","Photo.js","App.js","index.js","App.module.css","Photo.module.css"],"names":["reducer","state","action","type","isLoading","data","query","page","payload","results","filter","item","photos","some","photo","id","console","log","all_photos","isLikedFilterOn","window","innerHeight","scrollY","document","body","scrollHeight","toggledPhoto","updateLikedByUser","map","liked_by_user","liked_photos","tempLiked","tempAll","Error","clientID","process","AppContext","React","createContext","initialState","AppProvider","children","useReducer","dispatch","fetchImages","a","urlPage","urlQuery","url","fetch","response","json","useEffect","updatePage","addEventListener","removeEventListener","Provider","value","handleChange","e","target","handleSubmit","preventDefault","handleLike","handleLikedFilter","useGlobalContext","useContext","Photo","props","regular","urls","alt_description","user","name","portfolio_url","medium","profile_image","iconStyle","fontSize","className","styles","src","alt","photoInfo","href","userImg","onClick","btn_icon","style","App","search","searchForm","placeholder","formInput","onChange","submitBtn","btnFilter","active","undefined","photosCenter","loading","ReactDOM","render","getElementById","module","exports"],"mappings":"qPAuGeA,EAvGC,SAACC,EAAOC,GACpB,GAAoB,sBAAhBA,EAAOC,KACP,OAAO,2BAAKF,GAAZ,IAAmBG,WAAW,IAOlC,GAAoB,uBAAhBF,EAAOC,KAA+B,CACtC,IACIE,EADIC,EAAgBL,EAAhBK,MAAOC,EAASN,EAATM,KAQf,OALID,IAEAD,EAAOH,EAAOM,QAAQC,QAAQC,QAAO,SAAAC,GAAI,OAAKV,EAAMW,OAAOC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOJ,EAAKI,UAG3FT,GAAkB,IAATC,GACTS,QAAQC,IAAIZ,GACL,2BAAKJ,GAAZ,IAAmBiB,WAAYb,EAAMO,OAAQP,EAAMD,WAAW,KACvDE,GACPU,QAAQC,IAAIZ,GACL,2BAAKJ,GAAZ,IAAmBiB,WAAW,GAAD,mBAAMjB,EAAMW,QAAZ,YAAuBP,IAAOO,OAAO,GAAD,mBAAMX,EAAMW,QAAZ,YAAuBP,IAAOD,WAAW,MAE1GC,EAAOH,EAAOM,QAAQE,QAAO,SAAAC,GAAI,OAAKV,EAAMW,OAAOC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOJ,EAAKI,SAC5E,2BAAKd,GAAZ,IAAmBiB,WAAW,GAAD,mBAAMjB,EAAMW,QAAZ,YAAuBP,IAAOO,OAAO,GAAD,mBAAMX,EAAMW,QAAZ,YAAuBP,IAAOD,WAAW,KAKlH,GAAoB,qBAAhBF,EAAOC,KAGP,OAFAa,QAAQC,IAAIf,EAAOM,SAEZ,2BAAKP,GAAZ,IAAmBG,WAAW,IAGlC,GAAoB,gBAAhBF,EAAOC,KAGP,OAAKF,EAAMkB,kBAAoBlB,EAAMG,WAAcgB,OAAOC,YAAcD,OAAOE,SAAYC,SAASC,KAAKC,aAAe,EAC7G,2BAAKxB,GAAZ,IAAmBM,KAAMN,EAAMM,KAAO,IAG/B,eAAKN,GAIpB,GAAoB,iBAAhBC,EAAOC,KACP,OAAO,2BAAKF,GAAZ,IAAmBK,MAAOJ,EAAOM,UAGrC,GAAoB,aAAhBN,EAAOC,KACP,OAAO,2BAAKF,GAAZ,IAAmBM,KAAM,EAAGY,iBAAiB,IAGjD,GAAoB,gBAAhBjB,EAAOC,KAAwB,CAE/B,IAAIuB,EACEX,EAAKb,EAAOM,QAEZmB,EAAoB,WAQtB,OAPgB1B,EAAMiB,WAAWU,KAAI,SAAAd,GAKjC,OAJIA,EAAMC,KAAOA,IACbD,EAAMe,eAAiBf,EAAMe,cAC7BH,EAAeZ,GAEZA,MAKf,GAZwBb,EAAM6B,aAAajB,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOA,KAYjD,CACjB,IAAMgB,EAAY9B,EAAM6B,aAAapB,QAAO,SAAAI,GAAK,OAAIA,EAAMC,KAAOA,KAC5DiB,EAAUL,IAEhB,OAAI1B,EAAMkB,gBACC,2BAAKlB,GAAZ,IAAmBiB,WAAYc,EAASF,aAAcC,EAAWnB,OAAQmB,IAElE,2BAAK9B,GAAZ,IAAmBiB,WAAYc,EAASF,aAAcC,EAAWnB,OAAQoB,IAI7E,IAAMA,EAAUL,IAChB,OAAO,2BAAK1B,GAAZ,IAAmBiB,WAAYc,EAASF,aAAa,GAAD,mBAAM7B,EAAM6B,cAAZ,CAA0BJ,IAAed,OAAQoB,IAK7G,GAAoB,wBAAhB9B,EAAOC,KACP,OAAIF,EAAMkB,gBAEC,2BAAKlB,GAAZ,IAAmBkB,iBAAkBlB,EAAMkB,gBAAiBP,OAAQX,EAAMiB,aAGnE,2BAAKjB,GAAZ,IAAmBkB,iBAAkBlB,EAAMkB,gBAAiBP,OAAQX,EAAM6B,eAKlF,MAAM,IAAIG,MAAM,4BCpGPC,EAAQ,qBAAiBC,+C,OCIhCC,EAAaC,IAAMC,gBAEnBC,EAAe,CACjBnC,WAAW,EACXc,WAAY,GACZN,OAAQ,GACRkB,aAAc,GACdvB,KAAM,EACND,MAAO,GACPa,iBAAiB,GAGfqB,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAA0BC,qBAAW1C,EAASuC,GAA9C,mBAAOtC,EAAP,KAAc0C,EAAd,KACQpC,EAAgBN,EAAhBM,KAAMD,EAAUL,EAAVK,MAERsC,EAAW,uCAAG,oCAAAC,EAAA,6DAChBF,EAAS,CAAExC,KAAM,sBAGX2C,EAJU,gBAISvC,GACnBwC,EALU,iBAKWzC,GAEvB0C,EADA1C,EACG,UDzBO,2CCyBP,OAAkB4B,GAAlB,OAA6BY,GAA7B,OAAuCC,GAEvC,UD5BK,oCC4BL,OAAgBb,GAAhB,OAA2BY,GATlB,kBAaWG,MAAMD,GAbjB,cAaNE,EAbM,iBAcOA,EAASC,OAdhB,QAcN9C,EAdM,OAeZsC,EAAS,CAAExC,KAAM,qBAAsBK,QAASH,IAfpC,kDAkBZsC,EAAS,CAAExC,KAAM,mBAAoBK,QAAQ,EAAD,KAlBhC,0DAAH,qDAwBjB4C,qBAAU,WACNR,MAED,CAACrC,IAEJ,IAAM8C,EAAa,WACfV,EAAS,CAAExC,KAAM,iBA4BrB,OAPAiD,qBAAU,WAEN,OADAhC,OAAOkC,iBAAiB,SAAUD,GAC3B,WACHjC,OAAOmC,oBAAoB,SAAUF,MAE1C,IAGC,cAACjB,EAAWoB,SAAZ,CACIC,MAAK,2BACExD,GADF,IAEDoD,aACAK,aA9BS,SAAAC,GACjBhB,EAAS,CAAExC,KAAM,eAAgBK,QAASmD,EAAEC,OAAOH,SA8B3CI,aA3BS,SAAAF,GACjBA,EAAEG,iBACFnB,EAAS,CAAExC,KAAM,aACjByC,KAyBQmB,WAtBO,SAAChD,GAChB4B,EAAS,CAAExC,KAAM,cAAeK,QAASO,KAsBjCiD,kBAnBc,WACtBrB,EAAS,CAAExC,KAAM,2BAWjB,SAUKsC,KAKAwB,EAAmB,WAC5B,OAAOC,qBAAW9B,I,gBC3DP+B,EA/BD,SAACC,GACX,IACIrD,EAKAqD,EALArD,GACQsD,EAIRD,EAJAE,KAAQD,QACRE,EAGAH,EAHAG,gBACA1C,EAEAuC,EAFAvC,cAJJ,EAMIuC,EADAI,KAAQC,EALZ,EAKYA,KAAMC,EALlB,EAKkBA,cAAgCC,EALlD,EAKiCC,cAAiBD,OAE1CZ,EAAeE,IAAfF,WACFc,EAAY,CAAEC,SAAU,QAE9B,OACI,0BAASC,UAAWC,IAAOlE,MAA3B,UACI,qBAAKmE,IAAKZ,EAASa,IAAKX,IACxB,sBAAKQ,UAAWC,IAAOG,UAAvB,UACI,gCACI,6BAAKV,IAEL,mBAAGW,KAAMV,EAAT,SACI,qBAAKO,IAAKN,EAAQO,IAAKT,EAAMM,UAAWC,IAAOK,eAIvD,wBAAQC,QAAS,kBAAMvB,EAAWhD,IAAKgE,UAAWC,IAAOO,SAAzD,SACK1D,EAAgB,cAAC,IAAD,CAAQ2D,MAAOX,IAAgB,cAAC,IAAD,CAAmBW,MAAOX,a,gBCA/EY,MAvBf,WACE,MAAqGxB,IAA7FrD,EAAR,EAAQA,OAAQR,EAAhB,EAAgBA,UAAWE,EAA3B,EAA2BA,MAAOoD,EAAlC,EAAkCA,aAAcG,EAAhD,EAAgDA,aAAcG,EAA9D,EAA8DA,kBAAmB7C,EAAjF,EAAiFA,gBAEjF,OAAO,iCAEL,0BAAS4D,UAAWC,IAAOU,OAA3B,UACE,uBAAMX,UAAWC,IAAOW,WAAxB,UACE,uBAAOxF,KAAK,OAAOyF,YAAY,iCAAQb,UAAWC,IAAOa,UAAWpC,MAAOnD,EAAOwF,SAAUpC,IAC5F,wBAAQvD,KAAK,SAAS4E,UAAWC,IAAOe,UAAWT,QAASzB,EAA5D,SACE,cAAC,IAAD,SAGJ,wBAAQyB,QAAStB,EAAmBe,UAAWC,IAAOgB,UAAWjF,GAAII,EAAkB6D,IAAOiB,YAASC,EAAvG,0FAEF,0BAASnB,UAAWC,IAAOpE,OAA3B,UACE,qBAAKmE,UAAWC,IAAOmB,aAAvB,SACGvF,EAAOgB,KAAI,SAAAd,GAAK,OAAI,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,SAExCX,GAAa,oBAAI2E,UAAWC,IAAOoB,QAAtB,+BClBpBC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEA/E,SAASgF,eAAe,U,kBCT5BC,EAAOC,QAAU,CAAC,OAAS,oBAAoB,WAAa,wBAAwB,UAAY,uBAAuB,UAAY,uBAAuB,OAAS,oBAAoB,aAAe,0BAA0B,QAAU,qBAAqB,UAAY,uBAAuB,OAAS,sB,kBCA3SD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,qBAAqB,QAAU,uBAAuB,UAAY,4B","file":"static/js/main.fe6fe8e1.chunk.js","sourcesContent":["const reducer = (state, action) => {\r\n    if (action.type === 'GET_PHOTOS_BEGINS') {\r\n        return { ...state, isLoading: true }\r\n    }\r\n\r\n\r\n    // 2. если введен запрос - сними фильтр и покажи все фото по запросу\r\n    // после ввода поискового запроса и отправки формы - не удаляй лайкнутые изображения\r\n\r\n    if (action.type === 'GET_PHOTOS_SUCCESS') {\r\n        const { query, page } = state;\r\n        let data;\r\n\r\n        if (query) {\r\n            // Иногда получаем дубликаты от API. Чтобы избежать их - фильтруем поступивший массив, избавлясь от элементов с таким же id, как у элементов в photos\r\n            data = action.payload.results.filter(item => !state.photos.some(photo => photo.id === item.id))\r\n        }\r\n\r\n        if (query && page === 1) {\r\n            console.log(data)\r\n            return { ...state, all_photos: data, photos: data, isLoading: false }\r\n        } else if (query) {\r\n            console.log(data)\r\n            return { ...state, all_photos: [...state.photos, ...data], photos: [...state.photos, ...data], isLoading: false }\r\n        } else {\r\n            data = action.payload.filter(item => !state.photos.some(photo => photo.id === item.id))\r\n            return { ...state, all_photos: [...state.photos, ...data], photos: [...state.photos, ...data], isLoading: false }\r\n        }\r\n\r\n    }\r\n\r\n    if (action.type === 'GET_PHOTOS_ERROR') {\r\n        console.log(action.payload)\r\n        // идея: добавить в стейт photos_error, чтобы рендерить компонент с ошибкой\r\n        return { ...state, isLoading: false }\r\n    }\r\n\r\n    if (action.type === 'UPDATE_PAGE') {\r\n        // если пользователь доскроллил до конца страницы - подгрузи данные для следующей страницы\r\n        // подгружай только в том случае, если пользователь не находится на странице фильтров и в данный момент не идет загрузка других фотографий\r\n        if (!state.isLikedFilterOn && !state.isLoading && (window.innerHeight + window.scrollY) >= document.body.scrollHeight - 2) {\r\n            return { ...state, page: state.page + 1 }\r\n        }\r\n        else {\r\n            return { ...state }\r\n        }\r\n    }\r\n\r\n    if (action.type === 'UPDATE_QUERY') {\r\n        return { ...state, query: action.payload }\r\n    }\r\n\r\n    if (action.type === 'SET_PAGE') {\r\n        return { ...state, page: 1, isLikedFilterOn: false }\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_LIKE') {\r\n        // нужно задать разное поведение в зависимости от двух условий - применен ли сейчас фильтр коллекции и лайкали ли мы фото ранее (содержится ли оно в коллекции)\r\n        let toggledPhoto;\r\n        const id = action.payload;\r\n        const isInLikedPhotos = state.liked_photos.some(photo => photo.id === id);\r\n        const updateLikedByUser = () => {\r\n            const tempAll = state.all_photos.map(photo => {\r\n                if (photo.id === id) {\r\n                    photo.liked_by_user = !photo.liked_by_user;\r\n                    toggledPhoto = photo;\r\n                }\r\n                return photo\r\n            })\r\n            return tempAll\r\n        }\r\n        // если фото уже в коллекции (лайкнуто) - сними лайк и убери из коллекции. Если еще не в коллекции - поставь лайк и добавь в нее.\r\n        if (isInLikedPhotos) {\r\n            const tempLiked = state.liked_photos.filter(photo => photo.id !== id)\r\n            const tempAll = updateLikedByUser();\r\n            // если снимаем лайк, когда применен фильтр - сразу отобрази удаление фото из страницы (обнови photos на основе которого строится рендер)\r\n            if (state.isLikedFilterOn) {\r\n                return { ...state, all_photos: tempAll, liked_photos: tempLiked, photos: tempLiked }\r\n            } else {\r\n                return { ...state, all_photos: tempAll, liked_photos: tempLiked, photos: tempAll }\r\n            }\r\n        } else {\r\n            // если фото еще не в коллекции - поставь лайк и добавь в нее. Это также означает, что фильтр точно не активен, ведь там показываются только фото в коллекции.\r\n            const tempAll = updateLikedByUser();\r\n            return { ...state, all_photos: tempAll, liked_photos: [...state.liked_photos, toggledPhoto], photos: tempAll }\r\n        }\r\n    }\r\n\r\n\r\n    if (action.type === 'TOGGLE_LIKED_FILTER') {\r\n        if (state.isLikedFilterOn) {\r\n            // если фильтр сейчас активен - значит убери фильтр и покажи все фотографии\r\n            return { ...state, isLikedFilterOn: !state.isLikedFilterOn, photos: state.all_photos }\r\n        } else {\r\n            // если фильтр выключен - включи его и покажи только лайкнутые фотографии\r\n            return { ...state, isLikedFilterOn: !state.isLikedFilterOn, photos: state.liked_photos }\r\n        }\r\n\r\n    }\r\n\r\n    throw new Error('no matching action type')\r\n}\r\n\r\nexport default reducer;","export const clientID = `?client_id=${process.env.REACT_APP_ACCESS_KEY}`\r\nexport const mainUrl = `https://api.unsplash.com/photos/`\r\nexport const searchUrl = `https://api.unsplash.com/search/photos/`","import React, { useContext, useReducer, useEffect } from 'react';\r\nimport reducer from './reducer';\r\nimport { clientID, mainUrl, searchUrl } from './constants';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    all_photos: [],\r\n    photos: [],\r\n    liked_photos: [],\r\n    page: 1,\r\n    query: '',\r\n    isLikedFilterOn: false\r\n};\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const { page, query } = state;\r\n\r\n    const fetchImages = async () => {\r\n        dispatch({ type: 'GET_PHOTOS_BEGINS' })\r\n\r\n        let url;\r\n        const urlPage = `&page=${page}`\r\n        const urlQuery = `&query=${query}`\r\n        if (query) {\r\n            url = `${searchUrl}${clientID}${urlPage}${urlQuery}`\r\n        } else {\r\n            url = `${mainUrl}${clientID}${urlPage}`\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            dispatch({ type: 'GET_PHOTOS_SUCCESS', payload: data })\r\n\r\n        } catch (error) {\r\n            dispatch({ type: 'GET_PHOTOS_ERROR', payload: error })\r\n            //   setLoading(false)\r\n            //   console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchImages();\r\n        // eslint-disable-next-line\r\n    }, [page])\r\n\r\n    const updatePage = () => {\r\n        dispatch({ type: 'UPDATE_PAGE' })\r\n    };\r\n\r\n    const handleChange = e => {\r\n        dispatch({ type: 'UPDATE_QUERY', payload: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({ type: 'SET_PAGE' });\r\n        fetchImages();\r\n    }\r\n\r\n    const handleLike = (id) => {\r\n        dispatch({ type: 'TOGGLE_LIKE', payload: id })\r\n    }\r\n\r\n    const handleLikedFilter = () => {\r\n        dispatch({ type: 'TOGGLE_LIKED_FILTER' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", updatePage);\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", updatePage);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                ...state,\r\n                updatePage,\r\n                handleChange,\r\n                handleSubmit,\r\n                handleLike,\r\n                handleLikedFilter\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }","import React from 'react'\r\nimport { FcLikePlaceholder, FcLike } from 'react-icons/fc'\r\nimport { useGlobalContext } from './context'\r\nimport styles from './Photo.module.css'\r\n\r\nconst Photo = (props) => {\r\n    const {\r\n        id,\r\n        urls: { regular },\r\n        alt_description,\r\n        liked_by_user,\r\n        user: { name, portfolio_url, profile_image: { medium } }\r\n    } = props;\r\n    const { handleLike } = useGlobalContext();\r\n    const iconStyle = { fontSize: \"2rem\" }\r\n\r\n    return (\r\n        <article className={styles.photo}>\r\n            <img src={regular} alt={alt_description} />\r\n            <div className={styles.photoInfo}>\r\n                <div>\r\n                    <h4>{name}</h4>\r\n                    {/* <p>{likes} likes</p> */}\r\n                    <a href={portfolio_url}>\r\n                        <img src={medium} alt={name} className={styles.userImg} />\r\n                    </a>\r\n                </div>\r\n\r\n                <button onClick={() => handleLike(id)} className={styles.btn_icon}>\r\n                    {liked_by_user ? <FcLike style={iconStyle} /> : <FcLikePlaceholder style={iconStyle} />}\r\n                </button>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Photo\r\n","import React from 'react'\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport Photo from './Photo';\r\nimport { useGlobalContext } from './context'\r\nimport styles from './App.module.css'\r\n\r\nfunction App() {\r\n  const { photos, isLoading, query, handleChange, handleSubmit, handleLikedFilter, isLikedFilterOn } = useGlobalContext();\r\n\r\n  return <main>\r\n\r\n    <section className={styles.search}>\r\n      <form className={styles.searchForm}>\r\n        <input type=\"text\" placeholder=\"поиск\" className={styles.formInput} value={query} onChange={handleChange} />\r\n        <button type=\"submit\" className={styles.submitBtn} onClick={handleSubmit}>\r\n          <FaSearch />\r\n        </button>\r\n      </form>\r\n      <button onClick={handleLikedFilter} className={styles.btnFilter} id={isLikedFilterOn ? styles.active : undefined}>Моя коллекция</button>\r\n    </section>\r\n    <section className={styles.photos}>\r\n      <div className={styles.photosCenter}>\r\n        {photos.map(photo => <Photo key={photo.id} {...photo} />)}\r\n      </div>\r\n      {isLoading && <h2 className={styles.loading}>Loading...</h2>}\r\n    </section>\r\n  </main>\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>\n  , document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"App_search__268Ay\",\"searchForm\":\"App_searchForm__2qUzJ\",\"formInput\":\"App_formInput__2fs6k\",\"submitBtn\":\"App_submitBtn__LyWLb\",\"photos\":\"App_photos__1Oj1p\",\"photosCenter\":\"App_photosCenter__21amc\",\"loading\":\"App_loading__32Vav\",\"btnFilter\":\"App_btnFilter__3rIvw\",\"active\":\"App_active__1o1ar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_icon\":\"Photo_btn_icon__945Dc\",\"photo\":\"Photo_photo__3LqJ-\",\"userImg\":\"Photo_userImg__3sw0x\",\"photoInfo\":\"Photo_photoInfo__cpYpo\"};"],"sourceRoot":""}